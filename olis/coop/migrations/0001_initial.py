# Generated by Django 4.2.7 on 2023-11-30 17:54

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Address",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("street", models.CharField(max_length=50, verbose_name="strett Name")),
                ("zip_code", models.CharField(max_length=10)),
            ],
            options={
                "ordering": ["street", "zip_code"],
            },
        ),
        migrations.CreateModel(
            name="AdministrativeRecord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "priority_ranking",
                    models.IntegerField(
                        choices=[
                            (1, "Priority 1"),
                            (2, "Priority 2"),
                            (3, "Priority 3"),
                            (4, "Priority 4"),
                            (5, "Priority 5"),
                        ],
                        verbose_name="Priority Ranking",
                    ),
                ),
                (
                    "record_type",
                    models.CharField(
                        max_length=150, verbose_name="Type of Record Group"
                    ),
                ),
            ],
            options={
                "ordering": ["priority_ranking"],
            },
        ),
        migrations.CreateModel(
            name="AnnualPMTask",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("task_date", models.DateField()),
                ("other", models.TextField(blank=True, verbose_name="Other Tasks")),
                (
                    "check_update_insurance_building_equipment",
                    models.BooleanField(default=False),
                ),
                (
                    "check_update_insurance_collections",
                    models.BooleanField(default=False),
                ),
                (
                    "revise_building_maintenance_budget",
                    models.BooleanField(default=False),
                ),
                ("pump_septic_system", models.BooleanField(default=False)),
                (
                    "arrange_inspection_by_fire_marshal",
                    models.BooleanField(default=False),
                ),
                ("flush_fire_suppression_system", models.BooleanField(default=False)),
                (
                    "arrange_inspection_fire_extinguishers",
                    models.BooleanField(default=False),
                ),
                ("arrange_inspection_elevators", models.BooleanField(default=False)),
                ("inspect_electrical_system", models.BooleanField(default=False)),
                ("inspect_plumbing_system", models.BooleanField(default=False)),
                ("update_service_contracts", models.BooleanField(default=False)),
                ("update_building_plans_drawings", models.BooleanField(default=False)),
                ("inventory_collections", models.BooleanField(default=False)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="AssemblyArea",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "area_or_floor",
                    models.CharField(max_length=150, verbose_name="Area/Floor"),
                ),
                (
                    "staff_member_in_charge",
                    models.CharField(max_length=150, verbose_name="Staff Member"),
                ),
                (
                    "backup_1",
                    models.CharField(max_length=150, verbose_name="Backup #1"),
                ),
                (
                    "backup_2",
                    models.CharField(max_length=150, verbose_name="Backup #2"),
                ),
                ("location", models.CharField(max_length=300, verbose_name="Location")),
            ],
        ),
        migrations.CreateModel(
            name="BiannualPMTask",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("task_date", models.DateField()),
                ("other", models.TextField(blank=True, verbose_name="Other Tasks")),
                ("hold_fire_drill", models.BooleanField(default=False)),
                ("inspect_roof_drainage", models.BooleanField(default=False)),
                ("inspect_windows_skylights", models.BooleanField(default=False)),
                ("inspect_building_foundation", models.BooleanField(default=False)),
                ("inspect_fire_detection_system", models.BooleanField(default=False)),
                ("inspect_fire_suppression_system", models.BooleanField(default=False)),
                ("inspect_security_system", models.BooleanField(default=False)),
                ("general_inspection", models.BooleanField(default=False)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="BuildingPlan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=500, verbose_name="Plan Name")),
                ("description", models.TextField(verbose_name="Plan Description")),
                (
                    "color_code",
                    models.CharField(max_length=20, verbose_name="Color Code"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="City",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="City")),
                ("state", models.CharField(default="RI", max_length=20)),
            ],
            options={
                "ordering": ["name"],
                "unique_together": {("name", "state")},
            },
        ),
        migrations.CreateModel(
            name="CollectionStorage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "location_type",
                    models.CharField(
                        choices=[
                            (
                                "Within Building/Institution",
                                "Within Building/Institution",
                            ),
                            ("Off-Site", "Off-Site"),
                        ],
                        max_length=50,
                        verbose_name="Location Type",
                    ),
                ),
                ("location", models.CharField(max_length=300, verbose_name="Location")),
                (
                    "space_available",
                    models.CharField(max_length=150, verbose_name="Space Available"),
                ),
                (
                    "contact_person",
                    models.CharField(max_length=150, verbose_name="Contact Person"),
                ),
                ("phone", models.CharField(max_length=15, verbose_name="Phone")),
                (
                    "cell_phone",
                    models.CharField(max_length=15, verbose_name="Cell Phone"),
                ),
                (
                    "after_hours_phone",
                    models.CharField(max_length=15, verbose_name="After-Hours Phone"),
                ),
                ("pager", models.CharField(max_length=15, verbose_name="Pager")),
            ],
        ),
        migrations.CreateModel(
            name="CommandCenter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "command_center_location",
                    models.CharField(
                        max_length=300, verbose_name="Command Center Location"
                    ),
                ),
                (
                    "alternate_location_1",
                    models.CharField(
                        max_length=300, verbose_name="Alternate Location #1"
                    ),
                ),
                (
                    "alternate_location_2",
                    models.CharField(
                        max_length=300, verbose_name="Alternate Location #2 (Off-site)"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Company",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("address1", models.CharField(max_length=150, verbose_name="Address1")),
                (
                    "address2",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="Address2"
                    ),
                ),
                (
                    "city",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="coop.city",
                        verbose_name="City",
                    ),
                ),
            ],
            options={
                "ordering": ["city"],
            },
        ),
        migrations.CreateModel(
            name="ComputerOperation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("OR", "Computer Operation Relocation"),
                            ("ERA", "Emergency Remote Access"),
                            ("P", "Procedures"),
                            ("LW", "Library Website"),
                        ],
                        max_length=3,
                        verbose_name="Category",
                    ),
                ),
                ("procedures", models.TextField(blank=True, verbose_name="Procedures")),
                ("computer", models.CharField(max_length=150)),
                ("intranet", models.TextField(blank=True, verbose_name="Intranet")),
                (
                    "website",
                    models.TextField(blank=True, verbose_name="Library Website"),
                ),
                (
                    "regional_network",
                    models.TextField(
                        blank=True, verbose_name="Regional Library Network"
                    ),
                ),
                (
                    "online_catalog",
                    models.TextField(blank=True, verbose_name="Local Online Catalog"),
                ),
                (
                    "subscription_services",
                    models.TextField(
                        blank=True, verbose_name="Online Subscription Services"
                    ),
                ),
                ("other", models.TextField(blank=True, verbose_name="Other")),
            ],
            options={
                "ordering": ["category"],
            },
        ),
        migrations.CreateModel(
            name="DailyPMTask",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("task_date", models.DateField()),
                ("other", models.TextField(blank=True, verbose_name="Other Tasks")),
                ("clean_restrooms", models.BooleanField(default=False)),
                ("stack_maintenance", models.BooleanField(default=False)),
                ("empty_garbage", models.BooleanField(default=False)),
                ("shovel_snow", models.BooleanField(default=False)),
                ("vacuum_floors", models.BooleanField(default=False)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Department",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "priority_ranking",
                    models.PositiveIntegerField(verbose_name="Priority Ranking"),
                ),
                (
                    "name",
                    models.CharField(max_length=150, verbose_name="Department Name"),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DisasterResponseTeamMember",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=150, verbose_name="Name")),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("Leader", "Leader"),
                            ("Coordinator", "Coordinator"),
                            ("Member", "Member"),
                        ],
                        max_length=20,
                        verbose_name="Role",
                    ),
                ),
                (
                    "contact_phone",
                    models.CharField(max_length=30, verbose_name="Phone"),
                ),
                (
                    "contact_cell_phone",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Cell Phone"
                    ),
                ),
                (
                    "contact_after_hours_phone",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="After Hours Phone"
                    ),
                ),
                (
                    "contact_email",
                    models.EmailField(blank=True, max_length=254, verbose_name="Email"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DryingSpace",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "location_type",
                    models.CharField(
                        choices=[
                            ("Within Building/", "Within Building/"),
                            ("Off-Site", "Off-Site"),
                        ],
                        max_length=50,
                        verbose_name="Location Type",
                    ),
                ),
                (
                    "space_available",
                    models.CharField(max_length=150, verbose_name="Space Available"),
                ),
                (
                    "contact_person",
                    models.CharField(max_length=150, verbose_name="Contact Person"),
                ),
                ("phone", models.CharField(max_length=20, verbose_name="Phone")),
                (
                    "cell_phone",
                    models.CharField(max_length=15, verbose_name="Cell Phone"),
                ),
                (
                    "after_hours_phone",
                    models.CharField(max_length=15, verbose_name="After-Hours Phone"),
                ),
                ("pager", models.CharField(max_length=15, verbose_name="Pager")),
            ],
        ),
        migrations.CreateModel(
            name="EmergencyCallList",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "staff_member",
                    models.CharField(max_length=150, verbose_name="Staff Member"),
                ),
                (
                    "estimated_response_time",
                    models.CharField(
                        max_length=50, verbose_name="Estimated Response Time"
                    ),
                ),
                (
                    "position_on_call_list",
                    models.PositiveIntegerField(verbose_name="Position on Call List"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EvacuationProcedure",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "area_or_floor",
                    models.CharField(max_length=150, verbose_name="Area/Floor"),
                ),
                (
                    "person_responsible",
                    models.CharField(
                        choices=[
                            ("person_1", "Person 1"),
                            ("person_2", "Person 2"),
                            ("backup_1", "Backup #1"),
                            ("backup_2", "Backup #2"),
                        ],
                        max_length=150,
                        verbose_name="Person Responsible for Clearing Area",
                    ),
                ),
                (
                    "backup_1",
                    models.CharField(
                        choices=[
                            ("person_1", "Person 1"),
                            ("person_2", "Person 2"),
                            ("backup_1", "Backup #1"),
                            ("backup_2", "Backup #2"),
                        ],
                        max_length=150,
                        verbose_name="Backup #1",
                    ),
                ),
                (
                    "backup_2",
                    models.CharField(
                        choices=[
                            ("person_1", "Person 1"),
                            ("person_2", "Person 2"),
                            ("backup_1", "Backup #1"),
                            ("backup_2", "Backup #2"),
                        ],
                        max_length=150,
                        verbose_name="Backup #2",
                    ),
                ),
                (
                    "evacuation_procedures",
                    models.TextField(verbose_name="Evacuation procedure"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FireDetection",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fire_alarm_pull_box_number",
                    models.CharField(
                        max_length=255, verbose_name="Fire Alarm Pull Box Number/Name"
                    ),
                ),
                ("fire_alarm_box_location", models.TextField(verbose_name="Location")),
                (
                    "fire_extinguisher_type",
                    models.CharField(
                        choices=[
                            ("('ABC', 'ABC')", "Abc"),
                            ("('Water', 'Water')", "Water"),
                            ("('CO2', 'CO2')", "Co2"),
                            ("Mist", "Mist"),
                        ],
                        max_length=200,
                        verbose_name="Type of Fire Extinguisher",
                    ),
                ),
                (
                    "fire_location_description",
                    models.TextField(verbose_name="Location Description"),
                ),
                (
                    "last_inspection_date",
                    models.DateField(verbose_name="Date of Last Inspection"),
                ),
                (
                    "heat_detector_type",
                    models.CharField(max_length=300, verbose_name="Type of Detector"),
                ),
                (
                    "monitoring_description",
                    models.TextField(
                        max_length=300,
                        verbose_name="Description of Monitoring Procedures",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Fire Detection and Suppression Information",
            },
        ),
        migrations.CreateModel(
            name="HousekeepingPestsRisk",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "pest_infestation",
                    models.CharField(
                        choices=[
                            ("1", "Must be addressed"),
                            ("2", "Should be addressed"),
                            ("3", "Could be addressed"),
                            ("4", "Not applicable/no action needed"),
                        ],
                        max_length=1,
                        verbose_name="Pest Infestation",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Institution",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=40)),
                ("code", models.CharField(max_length=3)),
                (
                    "address",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="institution",
                        to="coop.address",
                    ),
                ),
            ],
            options={
                "ordering": ["name", "code"],
            },
        ),
        migrations.CreateModel(
            name="InsuranceCoverage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "funds",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=50,
                        verbose_name="Funds Available for Salvage, Repair (in dollars)",
                    ),
                ),
                ("collections", models.TextField(verbose_name="Collections Appraised")),
                (
                    "date_of_last",
                    models.DateField(verbose_name="Date of Last Appraisal"),
                ),
                (
                    "conducting",
                    models.CharField(
                        max_length=150, verbose_name="Person Conducting Appraisal"
                    ),
                ),
                (
                    "responsible",
                    models.CharField(
                        choices=[
                            ("person_1", "Person 1"),
                            ("person_2", "Person 2"),
                            ("backup_1", "Backup #1"),
                            ("backup_2", "Backup #2"),
                        ],
                        max_length=150,
                        verbose_name="Person Responsible",
                    ),
                ),
                (
                    "frequency",
                    models.CharField(
                        choices=[
                            ("daily", "Daily"),
                            ("weekly", "Weekly"),
                            ("monthly", "Monthly"),
                            ("annually", "Annually"),
                        ],
                        max_length=50,
                        verbose_name="Frequency of Evaluation",
                    ),
                ),
                (
                    "procedures",
                    models.TextField(
                        verbose_name="Procedures in Case of Damage or Loss"
                    ),
                ),
                (
                    "documentation",
                    models.TextField(verbose_name="Documentation Required"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="InsuranceInformation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "policy_number",
                    models.CharField(max_length=50, verbose_name="Policy Number"),
                ),
                (
                    "policy_inception_date",
                    models.DateField(verbose_name="Policy Inception Date"),
                ),
                (
                    "policy_expiration_date",
                    models.DateField(verbose_name="Policy Expiration Date"),
                ),
                (
                    "property_covered",
                    models.CharField(
                        choices=[
                            ("BUILDING", "Building"),
                            ("MACHINERY", "Machinery"),
                            ("EQUIPMENT", "Equipment"),
                        ],
                        max_length=20,
                        verbose_name="Property Covered",
                    ),
                ),
                (
                    "amount_of_coverage",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=50,
                        verbose_name="Amount of Coverage",
                    ),
                ),
                (
                    "deductible",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=50,
                        null=True,
                        verbose_name="Amount of Deductible",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="InsuranceType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "policy1",
                    models.CharField(
                        choices=[
                            ("IC", "Insurance Carrier"),
                            ("IA", "Insurance Agency"),
                        ],
                        max_length=50,
                        verbose_name="Policy Information",
                    ),
                ),
                (
                    "policy2",
                    models.CharField(
                        choices=[
                            ("IC", "Insurance Carrier"),
                            ("IA", "Insurance Agency"),
                        ],
                        max_length=50,
                        verbose_name="Policy Information Business",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Location",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, verbose_name="Location Name")),
            ],
        ),
        migrations.CreateModel(
            name="MaterialsService",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, verbose_name="Service")),
                (
                    "backup",
                    models.CharField(max_length=50, verbose_name="Backup Liaison"),
                ),
                ("date", models.DateField()),
                (
                    "review_date",
                    models.DateField(
                        verbose_name="Date Review of Collection Priorities"
                    ),
                ),
                (
                    "inspection_date",
                    models.DateField(
                        verbose_name="Date of Last Inspection by Fire Marshal"
                    ),
                ),
                (
                    "contact_person",
                    models.CharField(
                        max_length=150,
                        verbose_name="Contact Person within Fire Department",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="NonOrganization",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "maintenance",
                    models.CharField(
                        choices=[
                            ("maintenance", "Maintenance"),
                            ("utilities", "Utilities"),
                            ("facilities", "Facilities"),
                            ("janitorial", "Janitorial"),
                            ("electrician", "Electrician"),
                            ("plumber", "Plumber"),
                        ],
                        max_length=50,
                        verbose_name="Maintenance",
                    ),
                ),
                (
                    "utilities",
                    models.CharField(
                        choices=[
                            ("maintenance", "Maintenance"),
                            ("utilities", "Utilities"),
                            ("facilities", "Facilities"),
                            ("janitorial", "Janitorial"),
                            ("electrician", "Electrician"),
                            ("plumber", "Plumber"),
                        ],
                        max_length=50,
                        verbose_name="Utilities",
                    ),
                ),
                (
                    "facilities",
                    models.CharField(
                        choices=[
                            ("maintenance", "Maintenance"),
                            ("utilities", "Utilities"),
                            ("facilities", "Facilities"),
                            ("janitorial", "Janitorial"),
                            ("electrician", "Electrician"),
                            ("plumber", "Plumber"),
                        ],
                        max_length=50,
                        verbose_name="Facilities",
                    ),
                ),
                (
                    "janitorial_services",
                    models.CharField(
                        choices=[
                            ("maintenance", "Maintenance"),
                            ("utilities", "Utilities"),
                            ("facilities", "Facilities"),
                            ("janitorial", "Janitorial"),
                            ("electrician", "Electrician"),
                            ("plumber", "Plumber"),
                        ],
                        max_length=50,
                        verbose_name="Janitorial Services",
                    ),
                ),
                (
                    "electrician",
                    models.CharField(
                        choices=[
                            ("maintenance", "Maintenance"),
                            ("utilities", "Utilities"),
                            ("facilities", "Facilities"),
                            ("janitorial", "Janitorial"),
                            ("electrician", "Electrician"),
                            ("plumber", "Plumber"),
                        ],
                        max_length=50,
                        verbose_name="Electrician",
                    ),
                ),
                (
                    "plumber",
                    models.CharField(
                        choices=[
                            ("maintenance", "Maintenance"),
                            ("utilities", "Utilities"),
                            ("facilities", "Facilities"),
                            ("janitorial", "Janitorial"),
                            ("electrician", "Electrician"),
                            ("plumber", "Plumber"),
                        ],
                        max_length=50,
                        verbose_name="Plumber",
                    ),
                ),
            ],
            options={
                "ordering": ["maintenance"],
            },
        ),
        migrations.CreateModel(
            name="Organization",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "emergency_services",
                    models.CharField(
                        choices=[
                            ("PD", "Police Department"),
                            ("EM", "Emergency Management"),
                            ("LM", "Local Emergency Management"),
                            ("ES", "Emergency Services"),
                        ],
                        max_length=50,
                        verbose_name="Emergency Services",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=150, verbose_name="Organization Name"),
                ),
                ("state", models.CharField(max_length=50, verbose_name="State")),
                (
                    "contact_person",
                    models.CharField(
                        max_length=150,
                        verbose_name="Contact Person within Fire Department",
                    ),
                ),
                ("phone", models.CharField(max_length=20, verbose_name="Phone")),
                (
                    "cell_phone",
                    models.CharField(max_length=20, verbose_name="Cell Phone"),
                ),
                ("fax", models.CharField(max_length=20, verbose_name="Fax")),
                ("website", models.URLField(max_length=300, verbose_name="Website")),
            ],
            options={
                "ordering": ["name", "state"],
            },
        ),
        migrations.CreateModel(
            name="OrganizationM",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "categories",
                    models.CharField(
                        choices=[
                            ("CE", "Computer Emergency"),
                            ("O", "Organization"),
                            ("CA", "Legal Advisor"),
                            ("AB", "Architecture Builder"),
                            ("GC", "Gas Company"),
                            ("OC", "Oil Company"),
                            ("EC", "Electric Company"),
                            ("WUC", "Water Utility Company"),
                            ("ECO", "Elevator Company"),
                        ],
                        max_length=3,
                        verbose_name="Categories",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="OverallSalvagePriority",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "priority_ranking",
                    models.PositiveIntegerField(verbose_name="Priority Ranking"),
                ),
                (
                    "material_or_equipment",
                    models.CharField(
                        max_length=150, verbose_name="Material or Equipment"
                    ),
                ),
                (
                    "location",
                    models.CharField(max_length=300, verbose_name="Location Floor"),
                ),
            ],
            options={
                "verbose_name_plural": "Overall Salvage Priorities",
            },
        ),
        migrations.CreateModel(
            name="PersonnelRisk",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "staff_training_emergency_procedures",
                    models.CharField(
                        choices=[
                            ("1", "Must be addressed"),
                            ("2", "Should be addressed"),
                            ("3", "Could be addressed"),
                            ("4", "Not applicable/no action needed"),
                        ],
                        max_length=1,
                        verbose_name="Staff Training",
                    ),
                ),
                (
                    "staff_training_security_procedures",
                    models.CharField(
                        choices=[
                            ("1", "Must be addressed"),
                            ("2", "Should be addressed"),
                            ("3", "Could be addressed"),
                            ("4", "Not applicable/no action needed"),
                        ],
                        max_length=1,
                        verbose_name="Security Procedures",
                    ),
                ),
                (
                    "security_staff_training_recognizing_hazards",
                    models.CharField(
                        choices=[
                            ("1", "Must be addressed"),
                            ("2", "Should be addressed"),
                            ("3", "Could be addressed"),
                            ("4", "Not applicable/no action needed"),
                        ],
                        max_length=1,
                        verbose_name="Recognizing Hazards",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Position",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField(max_length=250, verbose_name="Text")),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("OP", "Operating Procedures"),
                            ("CP", "Closing Procedures"),
                        ],
                        max_length=2,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Reporter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=150)),
                ("email", models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name="SeasonalPMTask",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("task_date", models.DateField()),
                ("other", models.TextField(blank=True, verbose_name="Other Tasks")),
                ("check_caulking", models.BooleanField(default=False)),
                ("clean_gutters", models.BooleanField(default=False)),
                ("check_clean_storm_drains", models.BooleanField(default=False)),
                ("winterize_grounds", models.BooleanField(default=False)),
                ("seasonal_heating_cooling_check", models.BooleanField(default=False)),
                ("spring_planting_maintenance", models.BooleanField(default=False)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SecurityRisk",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "automated_security_system",
                    models.CharField(
                        choices=[
                            ("1", "Must be addressed"),
                            ("2", "Should be addressed"),
                            ("3", "Could be addressed"),
                            ("4", "Not applicable/no action needed"),
                        ],
                        max_length=1,
                        verbose_name="Automated Security System",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ServiceType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_created", models.DateField()),
                ("date_updated", models.DateField()),
                ("description", models.CharField(max_length=300)),
                (
                    "monitoring_type",
                    models.CharField(max_length=100, verbose_name="Monitoring Type"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Staff",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("position", models.CharField(max_length=15)),
                ("email", models.EmailField(max_length=20)),
                ("phone", models.CharField(max_length=20)),
                (
                    "name",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="staff",
                        to="coop.staff",
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="StaffVisitorLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "area_or_floor",
                    models.CharField(max_length=300, verbose_name="Area/Floor"),
                ),
                (
                    "person_responsible",
                    models.CharField(
                        choices=[
                            ("person_1", "Person 1"),
                            ("person_2", "Person 2"),
                            ("backup_1", "Backup #1"),
                            ("backup_2", "Backup #2"),
                        ],
                        max_length=150,
                        verbose_name="Person Responsible for List",
                    ),
                ),
                (
                    "backup_1",
                    models.CharField(
                        choices=[
                            ("person_1", "Person 1"),
                            ("person_2", "Person 2"),
                            ("backup_1", "Backup #1"),
                            ("backup_2", "Backup #2"),
                        ],
                        max_length=150,
                        verbose_name="Backup #1",
                    ),
                ),
                (
                    "backup_2",
                    models.CharField(
                        choices=[
                            ("person_1", "Person 1"),
                            ("person_2", "Person 2"),
                            ("backup_1", "Backup #1"),
                            ("backup_2", "Backup #2"),
                        ],
                        max_length=150,
                        verbose_name="Backup #2",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="State",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=150, verbose_name="State Name")),
            ],
        ),
        migrations.CreateModel(
            name="StorageRisk",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "anchor_shelving",
                    models.CharField(
                        choices=[
                            ("1", "Must be addressed"),
                            ("2", "Should be addressed"),
                            ("3", "Could be addressed"),
                            ("4", "Not applicable/no action needed"),
                        ],
                        max_length=1,
                        verbose_name="Anchor Shelving",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Task",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="responsibility",
                        to="coop.task",
                    ),
                ),
                (
                    "responsibilities",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="jobs",
                        to="coop.staff",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Team",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=150, verbose_name="Team Name")),
            ],
        ),
        migrations.CreateModel(
            name="WaterDetector",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=150, verbose_name="Detector Name"),
                ),
                ("location", models.CharField(max_length=50, verbose_name="Location")),
                (
                    "street",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="wd_address",
                        to="coop.address",
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="WeeklyPMTask",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("task_date", models.DateField()),
                ("other", models.TextField(blank=True, verbose_name="Other Tasks")),
                ("check_emergency_numbers", models.BooleanField(default=False)),
                ("security_system_operable", models.BooleanField(default=False)),
                ("emergency_lights_operable", models.BooleanField(default=False)),
                ("emergency_power_operable", models.BooleanField(default=False)),
                ("alarm_panels_operable", models.BooleanField(default=False)),
                ("keys_accounted_for", models.BooleanField(default=False)),
                ("flashlights_present", models.BooleanField(default=False)),
                ("battery_powered_radio_operable", models.BooleanField(default=False)),
                ("check_pest_traps", models.BooleanField(default=False)),
                ("change_hygrothermograph_chart", models.BooleanField(default=False)),
                ("download_data_logger", models.BooleanField(default=False)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WeeklyOpening",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "backup_staff",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="backup_opening_staff",
                        to="coop.staff",
                    ),
                ),
                (
                    "day_of_week",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="days_of_weeks",
                        to="coop.task",
                    ),
                ),
                (
                    "primary_staff",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="primary_opening_staff",
                        to="coop.staff",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Weekly Opening Staff Schedules",
            },
        ),
        migrations.CreateModel(
            name="WaterDetectorCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.CharField(max_length=200, verbose_name="Text")),
                (
                    "detector_type",
                    models.CharField(
                        max_length=150, verbose_name="Type of Water Detector"
                    ),
                ),
                (
                    "monitoring_procedures",
                    models.TextField(blank=True, verbose_name="Monitoring Procedures"),
                ),
                (
                    "water_detector",
                    models.ForeignKey(
                        default=1,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="coop.waterdetector",
                        verbose_name="Water Detector",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TeamResponsibility",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "responsibility",
                    models.IntegerField(
                        choices=[
                            (1, "Disaster Team Leader"),
                            (2, "Administrator/Supplies Coordinator"),
                            (3, "Collections Recovery Specialist"),
                            (4, "Subject Specialist/Department Head"),
                            (5, "Work Crew Coordinator"),
                            (6, "Technology Coordinator"),
                            (7, "Building Recovery Coordinator"),
                            (8, "Security Coordinator"),
                            (9, "Public Relations Coordinator"),
                            (10, "Documentation Coordinator"),
                        ],
                        verbose_name="Responsibility",
                    ),
                ),
                (
                    "name",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="team_responsibilities",
                        to="coop.staff",
                    ),
                ),
                (
                    "team_member",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="team_member_responsibilities",
                        to="coop.staff",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Tasks",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("answer", models.BooleanField()),
                (
                    "institution_name",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tasks",
                        to="coop.institution",
                        verbose_name="Institution Name",
                    ),
                ),
                (
                    "items",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="operating_procedures",
                        to="coop.task",
                    ),
                ),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tasks",
                        to="coop.question",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Services",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "contact_person",
                    models.CharField(max_length=150, verbose_name="Contact Person"),
                ),
                ("phone", models.CharField(max_length=30, verbose_name="Phone Number")),
                (
                    "after_hours_phone",
                    models.CharField(max_length=20, verbose_name="After Hours Phone"),
                ),
                ("pager", models.CharField(max_length=20, verbose_name="Pager")),
                ("email", models.EmailField(max_length=150, verbose_name="Email")),
                (
                    "addresses",
                    models.ManyToManyField(
                        related_name="services_companies", to="coop.address"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Responsibilities",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "responsibility",
                    models.CharField(
                        choices=[
                            ("GCI", "Collection Information"),
                            ("PSL", "Preparing a staff list"),
                            ("AR", "Assessing Risk"),
                            ("OCP", "Opening closing Procedures"),
                            ("DSP", "Determining Salvage Priorities"),
                            ("PMC", "Preventive Maintenance Check List"),
                            ("IAI", "Collection Insurance and Accounting Information"),
                            (
                                "FPP",
                                "Facilitating Information and Preparing Floor Plans",
                            ),
                            ("CIE", "Collection Information Local Emergency"),
                            ("GIS", "Gathering Internal Supplies"),
                            (
                                "DEP",
                                "Devising Emergency Response and Evacuation Procedures",
                            ),
                            ("IPC", "Identifying Potential Command center"),
                            ("PEC", "Preparing Emergency Call List"),
                            ("IPT", "Identifying Potential Volunteers"),
                            ("CST", "Coordinating Staff Training"),
                            ("CSD", "Coordinating Staff Distribution"),
                            ("PCK", "Preparing communication PR Kit"),
                            (
                                "CBI",
                                "Communicating with Bank or Financial Institutions",
                            ),
                            ("MBI", "Maintaining Budy Institutions"),
                            ("IT", "Information Technology"),
                        ],
                        max_length=3,
                    ),
                ),
                (
                    "name",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="task_responsibilities",
                        to="coop.task",
                    ),
                ),
            ],
            options={
                "ordering": ["responsibility", "name"],
            },
        ),
        migrations.CreateModel(
            name="Reconfiguration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title_or_contact",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="Title/Contact"
                    ),
                ),
                (
                    "address1",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="Address1"
                    ),
                ),
                (
                    "address2",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="Address2"
                    ),
                ),
                (
                    "zip_code",
                    models.CharField(blank=True, max_length=50, verbose_name="Zip"),
                ),
                (
                    "phone",
                    models.CharField(blank=True, max_length=15, verbose_name="Phone"),
                ),
                (
                    "cell_phone",
                    models.CharField(
                        blank=True, max_length=15, verbose_name="Cell Phone"
                    ),
                ),
                (
                    "pager",
                    models.CharField(blank=True, max_length=15, verbose_name="Pager"),
                ),
                (
                    "email",
                    models.EmailField(blank=True, max_length=150, verbose_name="Email"),
                ),
                (
                    "outside_organization",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="Organization"
                    ),
                ),
                (
                    "staff_person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="coop.disasterresponseteammember",
                        verbose_name="Staff Person",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Questionaire",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "backup",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="associate",
                        to="coop.staff",
                    ),
                ),
                (
                    "institution",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="questionnaires",
                        to="coop.institution",
                    ),
                ),
                (
                    "primary",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="worker",
                        to="coop.staff",
                    ),
                ),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="questionnaires",
                        to="coop.question",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Inventories",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "policy_number",
                    models.CharField(max_length=50, verbose_name="Policy Number"),
                ),
                (
                    "inception_date",
                    models.DateField(verbose_name="Policy Inception Date"),
                ),
                (
                    "expiration_date",
                    models.DateField(verbose_name="Policy Expiration Date"),
                ),
                (
                    "coverage_amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=50,
                        verbose_name="Amount of Business",
                    ),
                ),
                (
                    "deductible",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=50,
                        null=True,
                        verbose_name="Amount of Deductible",
                    ),
                ),
                (
                    "frequency_of_review",
                    models.CharField(
                        max_length=150, verbose_name="Frequency of review"
                    ),
                ),
                (
                    "person_responsible_for_review",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="coop.staff",
                        verbose_name="Person responsibily",
                    ),
                ),
            ],
            options={
                "ordering": ["policy_number"],
            },
        ),
        migrations.CreateModel(
            name="HeatingCompany",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("material", models.CharField(blank=True, max_length=200)),
                ("other", models.CharField(max_length=300)),
                (
                    "address",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="heating_service_company_address",
                        to="coop.address",
                    ),
                ),
            ],
            options={
                "ordering": ["material"],
            },
        ),
        migrations.CreateModel(
            name="Heat",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("heat_detectors", models.CharField(max_length=50)),
                ("smoke_detectors", models.CharField(max_length=50)),
                (
                    "sprinklers",
                    models.CharField(max_length=50, verbose_name="Sprinklers System"),
                ),
                (
                    "Company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="heat_detector",
                        to="coop.company",
                    ),
                ),
                (
                    "location",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="locations",
                        to="coop.location",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "companies",
                "ordering": ["location"],
            },
        ),
        migrations.CreateModel(
            name="GasServices",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("service_category", models.CharField(max_length=100)),
                ("date_created", models.DateField(blank=True, null=True)),
                ("date_updated", models.DateField(blank=True, null=True)),
                (
                    "description",
                    models.CharField(
                        max_length=250, verbose_name="Emergency Evacuation Plans"
                    ),
                ),
                ("phone", models.CharField(max_length=20, verbose_name="Phone")),
                (
                    "after_hours",
                    models.CharField(max_length=20, verbose_name="After Hours Phone"),
                ),
                ("pager", models.CharField(max_length=20, verbose_name="Pager")),
                ("email", models.EmailField(max_length=150, verbose_name="Email")),
                (
                    "addresses",
                    models.ManyToManyField(
                        related_name="gas_services_addresses", to="coop.address"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EmergencyShutOff",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "shut_off_type",
                    models.CharField(
                        max_length=300, verbose_name="Emergency Shut-Off Type"
                    ),
                ),
                ("procedures", models.TextField(verbose_name="Procedures")),
                (
                    "facility_info",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="emergency_shut_offs",
                        to="coop.company",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Emergency Shut-Offs",
            },
        ),
        migrations.CreateModel(
            name="DisasterTeam",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("Primary", "Primary"),
                            ("Backup 1", "Backup 1"),
                            ("Backup 2", "Backup 2"),
                        ],
                        max_length=20,
                        verbose_name="Role",
                    ),
                ),
                (
                    "name",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="name",
                        to="coop.services",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DataRestoration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title_or_contact",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="Title/Contact"
                    ),
                ),
                (
                    "address1",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="Address1"
                    ),
                ),
                (
                    "address2",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="Address2"
                    ),
                ),
                (
                    "zip_code",
                    models.CharField(blank=True, max_length=50, verbose_name="Zip"),
                ),
                (
                    "phone",
                    models.CharField(blank=True, max_length=15, verbose_name="Phone"),
                ),
                (
                    "cell_phone",
                    models.CharField(
                        blank=True, max_length=15, verbose_name="Cell Phone"
                    ),
                ),
                (
                    "pager",
                    models.CharField(blank=True, max_length=15, verbose_name="Pager"),
                ),
                (
                    "email",
                    models.EmailField(blank=True, max_length=150, verbose_name="Email"),
                ),
                (
                    "outside_organization",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="Organization"
                    ),
                ),
                (
                    "staff_person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="coop.disasterresponseteammember",
                        verbose_name="Staff Person",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DataBackup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type_of_data",
                    models.CharField(
                        choices=[
                            ("Collection Records", "Collection Records"),
                            ("In-house Databases", "In-house Databases"),
                            ("Financial Information", "Financial Information"),
                            ("Digital Collections", "Digital Collections"),
                        ],
                        max_length=150,
                        verbose_name="Type of Data",
                    ),
                ),
                (
                    "location_of_data",
                    models.CharField(max_length=150, verbose_name="Location of Data"),
                ),
                (
                    "on_site_backup",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        verbose_name="On-site Location of Backup",
                    ),
                ),
                (
                    "off_site_location",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        verbose_name="Off-site Location of Backup",
                    ),
                ),
                (
                    "frequency",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Frequency of Backup"
                    ),
                ),
                (
                    "person_backup",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="data_backups",
                        to="coop.disasterresponseteammember",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CoolingSystem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=50, verbose_name="Organization Name"),
                ),
                (
                    "city",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="city",
                        to="coop.city",
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Contact",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_name", models.CharField(max_length=50)),
                ("last_name", models.CharField(max_length=50)),
                ("phone", models.CharField(blank=True, max_length=30)),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                (
                    "position",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="contacts",
                        to="coop.position",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Collection",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "priority_ranking",
                    models.PositiveIntegerField(verbose_name="Priority Ranking"),
                ),
                (
                    "name",
                    models.CharField(max_length=150, verbose_name="Collection Name"),
                ),
                (
                    "location",
                    models.CharField(max_length=300, verbose_name="Location floor"),
                ),
                (
                    "department",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="collections",
                        to="coop.department",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Collections",
            },
        ),
        migrations.CreateModel(
            name="ClosingStaffSchedule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "day_of_week",
                    models.PositiveIntegerField(
                        choices=[
                            (1, "Monday"),
                            (2, "Tuesday"),
                            (3, "Wednesday"),
                            (4, "Thursday"),
                            (5, "Friday"),
                            (6, "Saturday"),
                            (7, "Sunday"),
                        ]
                    ),
                ),
                (
                    "backup_staff",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="backup_closing_staff",
                        to="coop.staff",
                    ),
                ),
                (
                    "primary_staff",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="primary_closing_staff",
                        to="coop.staff",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Closing Staff Schedule",
            },
        ),
        migrations.CreateModel(
            name="ClimateControlRisk",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "heating_system",
                    models.IntegerField(
                        choices=[
                            (1, "Must be addressed"),
                            (2, "Should be addressed"),
                            (3, "Could be addressed"),
                            (4, "Not applicable/no action needed"),
                        ],
                        verbose_name="Heating System",
                    ),
                ),
                (
                    "cooling_system",
                    models.IntegerField(
                        choices=[
                            (1, "Must be addressed"),
                            (2, "Should be addressed"),
                            (3, "Could be addressed"),
                            (4, "Not applicable/no action needed"),
                        ],
                        verbose_name="Cooling System",
                    ),
                ),
                (
                    "humidification_system",
                    models.IntegerField(
                        choices=[
                            (1, "Must be addressed"),
                            (2, "Should be addressed"),
                            (3, "Could be addressed"),
                            (4, "Not applicable/no action needed"),
                        ],
                        verbose_name="Humidification System",
                    ),
                ),
                (
                    "air_circulation",
                    models.IntegerField(
                        choices=[
                            (1, "Must be addressed"),
                            (2, "Should be addressed"),
                            (3, "Could be addressed"),
                            (4, "Not applicable/no action needed"),
                        ],
                        verbose_name="Air Circulation",
                    ),
                ),
                (
                    "building_closed",
                    models.IntegerField(
                        choices=[
                            (1, "Must be addressed"),
                            (2, "Should be addressed"),
                            (3, "Could be addressed"),
                            (4, "Not applicable/no action needed"),
                        ],
                        verbose_name="Building Closed in Winter",
                    ),
                ),
                (
                    "temperature_extremes",
                    models.IntegerField(
                        choices=[
                            (1, "Must be addressed"),
                            (2, "Should be addressed"),
                            (3, "Could be addressed"),
                            (4, "Not applicable/no action needed"),
                        ],
                        verbose_name="Temperature Extremes",
                    ),
                ),
                (
                    "humidity_extremes",
                    models.IntegerField(
                        choices=[
                            (1, "Must be addressed"),
                            (2, "Should be addressed"),
                            (3, "Could be addressed"),
                            (4, "Not applicable/no action needed"),
                        ],
                        verbose_name="Humidity Extremes",
                    ),
                ),
                (
                    "mold_infestation",
                    models.IntegerField(
                        choices=[
                            (1, "Must be addressed"),
                            (2, "Should be addressed"),
                            (3, "Could be addressed"),
                            (4, "Not applicable/no action needed"),
                        ],
                        verbose_name="Mold Infestation",
                    ),
                ),
                (
                    "collections",
                    models.IntegerField(
                        choices=[
                            (1, "Must be addressed"),
                            (2, "Should be addressed"),
                            (3, "Could be addressed"),
                            (4, "Not applicable/no action needed"),
                        ],
                        verbose_name="Collections in Uncontrolled Areas",
                    ),
                ),
                (
                    "name",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="name",
                        to="coop.company",
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.AddField(
            model_name="address",
            name="city",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="address",
                to="coop.city",
            ),
        ),
        migrations.CreateModel(
            name="Policy",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "policy_number",
                    models.CharField(max_length=50, verbose_name="Policy Number"),
                ),
                (
                    "inception_date",
                    models.DateField(verbose_name="Policy Inception Date"),
                ),
                (
                    "expiration_date",
                    models.DateField(verbose_name="Policy Expiration Date"),
                ),
                (
                    "coverage_amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=50,
                        verbose_name="Amount of Extra Expenses Insurance Provided",
                    ),
                ),
                (
                    "deductible",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=50,
                        null=True,
                        verbose_name="Amount of Deductible",
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="company",
                        to="coop.company",
                    ),
                ),
            ],
            options={
                "unique_together": {
                    ("policy_number", "inception_date", "expiration_date")
                },
            },
        ),
    ]
